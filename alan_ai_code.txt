title("NewsReaderApp")

const page=5;
const key="7be4f3a0562747a49e1e1118953fb2ba";
let savedArticles=[];
const TOPICS=["business","entertainment","general","health","science","sports","technology"];
let TOPICS_INTENT=[];

for(let i=0;i<TOPICS.length;i++){
    TOPICS_INTENT.push(TOPICS[i]+"-"+TOPICS[i]);
    
}

TOPICS_INTENT=TOPICS_INTENT.join("|") + "|";

function apiCall(p,command,param,callback){
    let config={
        url:"https://studio.alan.app/api_playground/" +command,
        strictSSL:false,
        method:'POST',
        json:param,
        timeour:5000
    }
    api.request(config,(err,res,body)=>{
        if(err||res.statusCode!==200){
            p.play(`(sorry|) something went wrong (on the server|) ${err} ${res} ${body}`)
        }
        else if(body.error){
            p.play(body.error);
        }
        else{
            callback(body);
        }
    });
}

intent(`(show|what are|what're|what is|tell me|what's|read) (the|) (latest|recent) $(N news|headlines) (in|about|on) $(T-${TOPICS_INTENT})`,
      `(read|show|get|bring me) (the|) (recent|latest|) $(T- ${TOPICS_INTENT}) $(N news|headlines)`,p=>{
    let param={};
    if(p.T.label){
        param.category=p.T.label;
    }
    apiCall(p,'getNews',param,response=>{
        if(!response.error){
            let headlines=[];
            let images=[];
            let res=JSON.parse(response.data);
            let articles=res.articles;
            savedArticles=articles;
            let max=Math.min(page,articles.length);
            for(let i=0;i<max;i++){
                let article=articles[i];
                let name=article.source.name;
                let author=article.author;
                let title=article.title;
                let description=article.description;
                let image=article.UrlToImage;
                if(title){
                    headlines.push(title);
                    images.push(image);
                }
                
            }
            p.play({command:'newHeadlines',articles});
            p.play(` here are the (latest|recent|) $(N headlines)`,
                  `here's the (latest|recent) $(N news)`);
            p.play('would you like to read the headlines?');
            p.then(confirmation)
        }
        else{
            console.log(response.error);
        }
    })
})
 const confirmation=context(()=>{
     intent('yes',async(p)=>{
         for(let i=0;i<savedArticles.length;i++){
             p.play({command:'highlight',article:savedArticles[i]});
             p.play(`${savedArticles[i].title}`);
         }
         
     })
     intent('no', (p)=>{
         p.play('Sure, sounds good to me');
     })
 })
 intent(` open (the|) (article|) (number|) $(number* (.*)) `,(p)=>{
     if(p.number.value){
         p.play('sure,I am opening it i a new tab');
         p.play({command:'open',number:p.number.value,articles:savedArticles})
     }
     
 })

intent('(go|) back',(p)=>{
    p.play('sure,going back');
    p.play({command:'newHeadlines',articles:[]})
    
})
 
 intent(`what does the app do?`,`how does tis work?`,`what can I do here?`,`why should I use this`,
       reply(`this is a news project, and tou can provide the most recent headlines in mainstream media` +
            `just ask me anything about the news, and I will try to answer it`));

intent(`(types|categories|topics) (of|in) in the news (now|)`,`what (types|categories|topics ) of movies do yu have`,
      reply(` We provide news on `+ TOPICS.join(" ,") ));


intent(`whats your name`,
    reply(`my name is Alan`)
)




